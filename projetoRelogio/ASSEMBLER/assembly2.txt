JSR @INICIA_MEMORIA
NOP

%LABEL MAIN_LOOP
JSR @SR_REFRESH_DISPLAY
NOP
JSR @CONFIG_HORARIO
NOP
JSR @INCREMENTA_HORARIO
NOP
JMP @MAIN_LOOP

%LABEL INICIA_MEMORIA
LDI R0, $0
LDI R1, $1
LDI R2, $5
LDI R3, $9

STA R1, @ADDR_CTE1
STA R0, @ADDR_COUNTER_SEG_UN    
STA R0, @ADDR_COUNTER_SEG_DEZ   
STA R0, @ADDR_COUNTER_MIN_UN    
STA R0, @ADDR_COUNTER_MIN_DEZ   
STA R0, @ADDR_COUNTER_HOR_UN    
STA R0, @ADDR_COUNTER_HOR_DEZ   

STA R0, @ADDR_LIMIT_SEG_UN
STA R0, @ADDR_LIMIT_SEG_DEZ
STA R0, @ADDR_LIMIT_MIN_UN
STA R0, @ADDR_LIMIT_MIN_DEZ
STA R0, @ADDR_LIMIT_HOR_UN
STA R0, @ADDR_LIMIT_HOR_DEZ

STA R0, @FPGA_RESET
STA R0, @LEDR
RET

%LABEL SR_REFRESH_DISPLAY
LDA R4, @ADDR_COUNTER_SEG_UN     #-- LOAD UNIDADE
STA R4, @HEX0                    #-- ARMAZENA EM HEX0
LDA R4, @ADDR_COUNTER_SEG_DEZ    #-- LOAD DEZENA 
STA R4, @HEX1                    #-- ARMAZENA EM HEX1
LDA R4, @ADDR_COUNTER_MIN_UN     #-- LOAD CENTENA
STA R4, @HEX2                    #-- ARMAZENA EM HEX2
LDA R4, @ADDR_COUNTER_MIN_DEZ    #-- LOAD MILHAR
STA R4, @HEX3                    #-- ARMAZENA EM HEX3
LDA R4, @ADDR_COUNTER_HOR_UN     #-- LOAD DEZ.MILHAR 
STA R4, @HEX4                    #-- ARMAZENA EM HEX4
LDA R4, @ADDR_COUNTER_HOR_DEZ    #-- LOAD CEN.MILHAR 
STA R4, @HEX5                    #-- ARMAZENA EM HEX5
RET

%LABEL CONFIG_HORARIO
JMP @SHOULD_CONFIG
NOP 

%LABEL SHOULD_CONFIG
CEQ R1, @KEY1
JEQ @PRE_CONFIG_SEG_UN
NOP
RET

%LABEL PRE_CONFIG_SEG_UN
STA R4, @CLEAR_KEY1            # RST KEY1
LDI R4, $1                     # LOAD 1 em R4
STA R4, @LEDR                  # Acende primeiro LEDR

%LABEL CONFIG_SEG_UN
LDA R4, @SWR
STA R4, @ADDR_COUNTER_SEG_UN
STA R4, @HEX0
CEQ R1, @KEY1
JEQ @PRE_CONFIG_SEG_DEZ
NOP
JMP @CONFIG_SEG_UN

%LABEL PRE_CONFIG_SEG_DEZ
STA R4, @CLEAR_KEY1            # RST KEY1
LDI R4, $2                     # LOAD 2 em R4
STA R4, @LEDR                  # Acende segundo LEDR

%LABEL CONFIG_SEG_DEZ
LDA R4, @SWR
STA R4, @ADDR_COUNTER_SEG_DEZ
STA R4, @HEX1
CEQ R1, @KEY1
JEQ @PRE_CONFIG_MIN_UN
NOP
JMP @CONFIG_SEG_DEZ


%LABEL PRE_CONFIG_MIN_UN
STA R4, @CLEAR_KEY1            # RST KEY1
LDI R4, $4                     # LOAD 4 em R4
STA R4, @LEDR                  # Acende terceiro LEDR

%LABEL CONFIG_MIN_UN
LDA R4, @SWR
STA R4, @ADDR_COUNTER_MIN_UN
STA R4, @HEX2
CEQ R1, @KEY1
JEQ @PRE_CONFIG_MIN_DEZ
NOP
JMP @CONFIG_MIN_UN


%LABEL PRE_CONFIG_MIN_DEZ
STA R4, @CLEAR_KEY1            # RST KEY1
LDI R4, $8                     # LOAD 8 em R4
STA R4, @LEDR                  # Acende quarto LEDR

%LABEL CONFIG_MIN_DEZ
LDA R4, @SWR
STA R4, @ADDR_COUNTER_MIN_DEZ
STA R4, @HEX3
CEQ R1, @KEY1
JEQ @PRE_CONFIG_HOR_UN
NOP
JMP @CONFIG_MIN_DEZ



%LABEL PRE_CONFIG_HOR_UN
STA R4, @CLEAR_KEY1            # RST KEY1
LDI R4, $16                    # LOAD 16 em R4
STA R4, @LEDR                  # Acende quarto LEDR

%LABEL CONFIG_HOR_UN
LDA R4, @SWR
STA R4, @ADDR_COUNTER_HOR_UN
STA R4, @HEX4
CEQ R1, @KEY1
JEQ @PRE_CONFIG_HOR_DEZ
NOP
JMP @CONFIG_HOR_UN

%LABEL PRE_CONFIG_HOR_DEZ
STA R4, @CLEAR_KEY1            # RST KEY1
LDI R4, $32                    # LOAD 32 em R4
STA R4, @LEDR                  # Acende quinto LEDR

%LABEL CONFIG_HOR_DEZ
LDA R4, @SWR
STA R4, @ADDR_COUNTER_HOR_DEZ
STA R4, @HEX5
CEQ R1, @KEY1
JEQ @FIM_CONFIG
NOP
JMP @CONFIG_HOR_DEZ

%LABEL FIM_CONFIG
STA R4, @CLEAR_KEY1
STA R0, @LEDR
RET






%LABEL INCREMENTA_HORARIO
JMP @VERIFICA_INCREMENTO
NOP

%LABEL VERIFICA_INCREMENTO
CEQ R1, @KEY0
JEQ @INCREMENTA_SEGUNDO_UN
NOP
RET

%LABEL INCREMENTA_SEGUNDO_UN
STA  R4, @CLEAR_KEY0
CEQ  R3, @ADDR_COUNTER_SEG_UN   # seg_un == 9?
JEQ  @INCREMENTA_SEG_DEZ        # if seg_un == 9: seg_dez++
NOP
LDA  R4, @ADDR_COUNTER_SEG_UN
SOMA R4, @ADDR_CTE1
STA  R4, @ADDR_COUNTER_SEG_UN
RET

%LABEL INCREMENTA_SEG_DEZ
STA R0, @ADDR_COUNTER_SEG_UN    # if seg_un == 9: seg_un = 0

CEQ  R2, @ADDR_COUNTER_SEG_DEZ   # seg_dez == 6?
JEQ  @INCREMENTA_MIN_UN         # if seg_dez == 9: min_un++
NOP
LDA  R4, @ADDR_COUNTER_SEG_DEZ
SOMA R4, @ADDR_CTE1
STA  R4, @ADDR_COUNTER_SEG_DEZ
RET

%LABEL INCREMENTA_MIN_UN
STA R0, @ADDR_COUNTER_SEG_DEZ
STA R1, @ADDR_COUNTER_MIN_UN
RET




